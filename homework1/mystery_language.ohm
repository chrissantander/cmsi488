Mystery_Language {
  Program     =   Stmt+
  Stmt        =   Call ";"
              |   FuncDef
              |   Exp ";"
              |   Suite "if" Exp (else Suite)?


  SimpleStmt  =  "let" Ids "=" Exps               -- vardecl
              |  VarExps "=" Exps                 -- assign
              |  Call                             -- call
              |  "break"                          -- break
              |  "return" Exp?                    -- return
  Suite       =  SimpleStmt                       -- small
              |  newline  Stmt+                   -- large


  FuncDef     =   "func" id "(" Params ")" Body
  Body        =   "{" Stmt* "}"
  Params      =   (id ("," id)*)?
  Call        =   id "(" Args ")"
  Args        =   ListOf<Exp, ",">

  id          =  ~keyword letter idrest*
  addop       =   "+" | "-"
  mulop       =  "*" | "/" | "%"

  space := "\t" | " " | "\n" | comment
  comment = "--" (~"\n" any)*

}
